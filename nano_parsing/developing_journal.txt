
//+++++++++++++++++++++++
29.05.2021

Даже, если слайдеры не обновлять, а вводить координаты в текстовые поля, то при нажатии
"Set position" срабатывают только слайдеры.
А т.к. сигналы о смене слайдеров возникают последовательно, то и данные также отправляются
по каждому сигналу. Т.е. опять имеем несколько посылок вместо 1.


В общем надо разные ф-ции управления слайдерами от мышки или от кнопок.
Либо эти же ф-ции, но с параметром, что слайдер от мышки и тогда данные отправляем в serial.
А если от кнопок, то данные отправляет слот нажатия кнопки, а слайдеры обновляются только для визуализации.
//++++++++++++++++++++++++++
27.05.2021
Возникла бага.

Для каждого слайдера индивидуально срабатывает отправка координат по ком-порту.
А если по кнопке меняется положение сразу нескольких слайдеров, то на каждое изменение
отдельная посылка. Таким образом вместо 1 посылки, где меняются 3 привода у нас 3 посылки на смену каждого слайдера.
Как вариант - не обновлять слайдеры.
- ЖДать, пока текущая посылка будет обработана. После этого следующая посылка.
- Не обновлять слайдеры по кнопкам

//+++++++++++++++++++++++++++++++++
Если с передачей массива двоичных данных в serial пока проблема,
то можно передавать строку вида

«servo1, servo2, …, servo6»

Передаю конечные, а вывод неверный.

Проблема :

Движение робота рспределено на несколько стадий.
Команда "Взять предмет" разложена на несколько последовательных команд:

- Наклониться к предмету
- Открыть захват
- Опусить захват
- Захватить предмет
- поднять захват
- Вернуться в исходную точку

Каждая стадия - это набор положений приводов, отправленный по ком-порту.
ТАк вот проблема в том, что программа не ждет пока выполнится команда, потом посылает следующую,
А сразу отправляет все 6 наборов в порт - т.е. пауз нет. А эти паузы нужны.
Где-то в массиве данные сдвигаются...


Для начала попробуем после каждой отправки из ПК в робот дожидаться от робота ответа с его текущими координатами.

Проблема, думаю в парсинге от AlexGyver.
Буду делать свой парсинг.
Перехожу в проект nano_parsing

Да, вся проблема была с парсингом.

Стал передавать данные просто в двоичном виде, без перевода в строку.
Ну, пришлось, конечно, попотеть...

Вся проблема с перевдом массива, который в python называется list в массив QByteArray.
...
from PySide2.QtCore import QByteArray


    dd = bytes(data)
    qbdata = QByteArray(QByteArray.fromRawData(dd))
    tx = serial.writeData(qbdata)
...
Так данные передаются !!!!!!!!!!!!!!







